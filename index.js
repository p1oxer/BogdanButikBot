require("dotenv").config();
const {
    Bot,
    GrammyError,
    HttpError,
    session,
    SessionFlavor,
    Keyboard,
} = require("grammy");
const { conversations, createConversation } = require("@grammyjs/conversations");
const bot = new Bot(process.env.BOT_API_KEY);

bot.use(
    session({
        initial() {
            // return empty object for now
            return {};
        },
    })
);

// Install the conversations plugin.
bot.use(conversations());

bot.api.setMyCommands([
    { command: "start", description: "–ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" },
    // { command: "price", description: "–†–∞—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–µ—â–∏" },
]);

const keyboard = new Keyboard()
    .text("–ö—É—Ä—Å ¬•")
    .text("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å üí¥")
    .text("–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ üöÄ")
    .row()
    .text("INST ü™©")
    .text("–û—Ç–∑—ã–≤—ã üíå")
    .text("–õ–∏—á–Ω–∞—è —Å–≤—è–∑—å ‚ù§Ô∏è")
    .row()
    .text("–•–æ—á—É —Å–∫–∏–¥–∫—É ü§©")
    .text("–°–∫–∞—á–∞—Ç—å –ø–æ–π–∑–æ–Ω")
    .resized();

// async function createRequest(conversation, ctx) {
//     const username = ctx.message.from.username;
//     await ctx.reply("–ù–∞–ø–∏—à–∏ –∞—Ä—Ç–∏–∫—É–ª");
//     const vendorCode = await conversation.wait();
//     await ctx.reply("–ù–∞–ø–∏—à–∏ —Ä–∞–∑–º–µ—Ä");
//     const size = await conversation.wait();

//     await bot.api.sendMessage(
//         644010577,
//         `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n1.–ò–º—è - @${username}\n2.–ê—Ä—Ç–∏–∫—É–ª - ${vendorCode.message.text}\n3.–†–∞–∑–º–µ—Ä - ${size.message.text}`
//     );
// }

// bot.use(createConversation(createRequest));

// bot.hears("–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É", async (ctx) => {
//     await ctx.conversation.enter("createRequest");
// });
bot.hears("–°–∫–∞—á–∞—Ç—å –ø–æ–π–∑–æ–Ω", async (ctx) => {
    const keyboard = new Keyboard()
        .text("IOS")
        .text("Android")
        .row()
        .text("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é >")
        .resized();

    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É", {
        reply_markup: keyboard,
    });
});
bot.hears("IOS", async (ctx) => {
    await ctx.reply(
        "IOS - https://apps.apple.com/ru/app/ÂæóÁâ©-ÊúâÊØíÁöÑËøêÂä®-ÊΩÆÊµÅ-Â•ΩÁâ©/id1012871328"
    );
})
bot.hears("Android", async (ctx) => {
    await ctx.reply("Android - https://m.anxinapk.com/rj/12201303.html");
})
async function getClothesPrice(conversation, ctx) {
    await ctx.reply("–ù–∞–ø–∏—à–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö.");
    const { message } = await conversation.wait();

    if (!isNaN(Number(message.text))) {
        const sum = message.text * 13.7 + 1113 + 400;
        await ctx.reply(
            `–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ –≤—Å–µ–≥–æ ${Math.round(
                sum
            )} —Ä—É–±–ª–µ–π.\n\n–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞\nüëâüèª <b>@icytrill</b> `,
            {
                reply_markup: keyboard,
                parse_mode: "HTML",
            }
        );
    } else if (message.text == "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é >") {
        await ctx.reply(
            `–ü—Ä–∏–≤–µ—Ç, —É–≤–∞–∂–∞–µ–º—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å ! üëãüèª   

–Ø –ø–æ–º–æ—â–Ω–∏–∫ <a href="https://t.me/BOGDANBUTIK">BOGDAN | BUTIK </a>

–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å ? üëáüèª`,
            {
                parse_mode: "HTML",
                reply_markup: keyboard,
                disable_web_page_preview: true,
            }
        );
    } else {
        const priceKeyboard = new Keyboard()
            .text("–ö—Ä–æ—Å—Å–æ–≤–∫–∏ üëü")
            .text("–û–¥–µ–∂–¥–∞ üëï")
            .row()
            .text("–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã üëõ")
            .text("–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ ü§ñ")
            .row()
            .text("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é >")
            .resized();
        await ctx.reply("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", {
            reply_markup: priceKeyboard,
        });
    }
}

bot.use(createConversation(getClothesPrice));

bot.hears("–û–¥–µ–∂–¥–∞ üëï", async (ctx) => {
    await ctx.conversation.enter("getClothesPrice");
});

async function getSneakersPrice(conversation, ctx) {
    await ctx.reply("–ù–∞–ø–∏—à–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö.");
    const { message } = await conversation.wait();

    if (!isNaN(Number(message.text))) {
        const sum = message.text * 13.7 + 1613 + 400;
        await ctx.reply(
            `–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ –≤—Å–µ–≥–æ ${Math.round(
                sum
            )} —Ä—É–±–ª–µ–π.\n\n–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞\nüëâüèª <b>@icytrill</b> `,
            {
                reply_markup: keyboard,
                parse_mode: "HTML",
            }
        );
    } else if (message.text == "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é >") {
        await ctx.reply(
            `–ü—Ä–∏–≤–µ—Ç, —É–≤–∞–∂–∞–µ–º—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å ! üëãüèª   

–Ø –ø–æ–º–æ—â–Ω–∏–∫ <a href="https://t.me/BOGDANBUTIK">BOGDAN | BUTIK </a>

–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å ? üëáüèª`,
            {
                parse_mode: "HTML",
                reply_markup: keyboard,
                disable_web_page_preview: true,
            }
        );
    } else {
        const priceKeyboard = new Keyboard()
            .text("–ö—Ä–æ—Å—Å–æ–≤–∫–∏ üëü")
            .text("–û–¥–µ–∂–¥–∞ üëï")
            .row()
            .text("–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã üëõ")
            .text("–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ ü§ñ")
            .row()
            .text("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é >")
            .resized();
        await ctx.reply("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", {
            reply_markup: priceKeyboard,
        });
    }
}

bot.use(createConversation(getSneakersPrice));

bot.hears(["–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã üëõ", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ ü§ñ"], async (ctx) => {
    await ctx.reply(
        "–†–∞—Å—á–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–±–æ–π —Ç–æ–≤–∞—Ä–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö\n\nüëâüèª <b>@icytrill</b>",
        {
            parse_mode: "HTML",
        }
    );
});

bot.hears("–ö—Ä–æ—Å—Å–æ–≤–∫–∏ üëü", async (ctx) => {
    await ctx.conversation.enter("getSneakersPrice");
});

bot.hears("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å üí¥", async (ctx) => {
    const priceKeyboard = new Keyboard()
        .text("–ö—Ä–æ—Å—Å–æ–≤–∫–∏ üëü")
        .text("–û–¥–µ–∂–¥–∞ üëï")
        .row()
        .text("–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã üëõ")
        .text("–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ ü§ñ")
        .row()
        .text("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é >")
        .resized();

    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å üëáüèª", {
        reply_markup: priceKeyboard,
    });
});

bot.hears("–ö—É—Ä—Å ¬•", async (ctx) => {
    await ctx.reply("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫—É—Ä—Å —é–∞–Ω—è - 13.7");
});

bot.hears("–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ üöÄ", async (ctx) => {
    const keyboard = new Keyboard()
        .text("üöõ –û–±—ã—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞")
        .text("‚úàÔ∏è –≠–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∞")
        .row()
        .text("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é >")
        .resized();

    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –¥–æ—Å—Ç–∞–≤–∫–∏", {
        reply_markup: keyboard,
    });
});

bot.hears("üöõ –û–±—ã—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞", async (ctx) => {
    await ctx.reply(
        "–° –º–æ–º–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑–∞ –¥–æ –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º–Ω–æ–π –≤ –ú–æ—Å–∫–≤–µ ~ 20 –¥–Ω–µ–π (–±—ã–≤–∞–µ—Ç –∏ —Ä–∞–Ω—å—à–µ ü•∞)"
    );
});

bot.hears("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é >", async (ctx) => {
    await ctx.reply(
        `–ü—Ä–∏–≤–µ—Ç, —É–≤–∞–∂–∞–µ–º—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å ! üëãüèª   

–Ø –ø–æ–º–æ—â–Ω–∏–∫ <a href="https://t.me/BOGDANBUTIK">BOGDAN | BUTIK </a>

–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å ? üëáüèª`,
        { parse_mode: "HTML", reply_markup: keyboard, disable_web_page_preview: true }
    );
});

bot.hears("‚úàÔ∏è –≠–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∞", async (ctx) => {
    await ctx.reply(
        "–í–∞—à —Ç–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —Å–∞–º–æ–ª–µ—Ç–æ–º –∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤ —Å—Ä–æ–∫ –¥–æ 8 –¥–Ω–µ–π (–æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ —ç—Ç–æ–º—É –∑–∞–ø—Ä–æ—Å—É —Å—Ç—Ä–æ–≥–æ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)"
    );
});

bot.hears("–û—Ç–∑—ã–≤—ã üíå", async (ctx) => {
    await ctx.reply(
        "–° –æ—Ç–∑—ã–≤–∞–º–∏ –º–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è <a href='https://t.me/feedbackkk25'>–¢–£–¢</a>\n\n–í–∞—à–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –º–Ω–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞! ‚ù§Ô∏è",
        {
            parse_mode: "HTML",
        }
    );
});

bot.hears("–õ–∏—á–Ω–∞—è —Å–≤—è–∑—å ‚ù§Ô∏è", async (ctx) => {
    await ctx.reply(
        "–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?\n\n–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç - @icytrill.\n\n–í—Å–µ–≥–¥–∞ –∂–¥—É —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏! üòâ",
        {
            parse_mode: "HTML",
        }
    );
});

bot.hears("–•–æ—á—É —Å–∫–∏–¥–∫—É ü§©", async (ctx) => {
    await ctx.reply(
        "<i>–ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ª–µ–≥–∫–æ, —á—Ç–æ –≤—ã –¥–∞–∂–µ –Ω–µ –¥–æ–≥–∞–¥—ã–≤–∞–µ—Ç–µ—Å—å –Ω–∞—Å–∫–æ–ª—å–∫–æ</i> ü§™\n\n–£ –≤–∞—Å –µ—Å—Ç—å –≤—ã–±–æ—Ä:\n\n–†–µ–ø–æ—Å—Ç–Ω–∏ –ª—é–±–æ–π —Ä–∏–ª—Å –∏–∑ –º–æ–µ–≥–æ <a href='https://www.instagram.com/bogdan.butik?igsh=OWdzMXNhOGw3N2I1&utm_source=qr'>–∏–Ω—Å—Ç–∞–≥—Ä–∞–º–∞</a> - –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É <b>333‚ÇΩ</b>\n\n–ó–∞–ø–∏—à–∏ –≤–∏–¥–µ–æ–æ—Ç–∑—ã–≤ –Ω–∞ —Ç–æ–≤–∞—Ä –∑–∞–∫–∞–∑–∞–Ω–Ω—ã–π —É –º–µ–Ω—è - –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É <b>555‚ÇΩ</b>\n\n–°–Ω–∏–º–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é —Ä–µ–∫–ª–∞–º—É –ø—Ä–æ –º–æ–π –±—É—Ç–∏–∫ - –ø–æ–ª—É—á–∏ <b>1111111‚ÇΩ</b> (*–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã, –Ω–æ, –ª—é–±–æ–π —Ç—Ä—É–¥ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è üòâ)\n\n–ü—Ä–æ—è–≤–∏ —Å–≤–æ—é —Å–º–µ–∫–∞–ª–∫—É –∏ –ø—Ä–∏–¥—É–º–∞–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤, –∫–æ–Ω–∫—É—Ä—Å, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤ –∫–∞–Ω–∞–ª–µ, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üëâ <b>@icytrill</b>",
        {
            parse_mode: "HTML",
        }
    );
});

bot.hears("INST ü™©", async (ctx) => {
    const text =
        "<a href='https://www.instagram.com/bogdan.butik?igsh=OGQ5ZDc2ODk2ZA%3D%3D&utm_source=qr'>bogdan.butik</a> - –∑–¥–µ—Å—å —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫—Ä–∞—Å–∏–≤—ã–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–µ.\n\n—á–∞—Å—Ç–æ –ø—Ä–æ—Ö–æ–¥—è—Ç –∫–æ–Ω–∫—É—Ä—Å—ã –Ω–∞ —Ä–µ–ø–æ—Å—Ç—ã –º–æ–∏—Ö –≤–∏–¥–µ–æ, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ—Ö–æ–¥–∏ –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è, —á—Ç–æ–± –∑–∞–±—Ä–∞—Ç—å <b><u>5000</u></b> —Ä—É–±–ª–µ–π –∑–∞ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫! ü§ë";
    await ctx.reply(text, {
        parse_mode: "HTML",
    });
});

bot.command("start", async (ctx) => {
    await ctx.reply(
        `–ü—Ä–∏–≤–µ—Ç, —É–≤–∞–∂–∞–µ–º—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å ! üëãüèª   

–Ø –ø–æ–º–æ—â–Ω–∏–∫ <a href="https://t.me/BOGDANBUTIK">BOGDAN | BUTIK </a>

–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å ? üëáüèª`,
        { parse_mode: "HTML", reply_markup: keyboard, disable_web_page_preview: true }
    );
});

bot.catch((err) => {
    const ctx = err.ctx;
    console.error(`Error while handling update ${ctx.update.update_id}:`);
    const e = err.error;
    if (e instanceof GrammyError) {
        console.error("Error in request:", e.description);
    } else if (e instanceof HttpError) {
        console.error("Could not contact Telegram:", e);
    } else {
        console.error("Unknown error:", e);
    }
});

bot.start();
